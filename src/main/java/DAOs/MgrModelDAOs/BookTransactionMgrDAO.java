package DAOs.MgrModelDAOs;

import Models.DBModels.BookTransaction;
import Models.MgrModels.BookTransactionMgr;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Book Transaction data access object.
 * 
 * Including getAll and addNew methods. The data is generated by the system so
 * that don't need update and delete.
 * @author MinhTD
 */
public class BookTransactionMgrDAO {
    private Connection conn;
    private PreparedStatement ps;
    private ResultSet rs;
    
    public BookTransactionMgrDAO() {
        conn = DBConnection.DbConnection.getConnection();
    }
    
    /**
     * Write later.
     * 
     * @return 
     * @author MinhTD
     */
    public BookTransactionMgr[] getAll() {
        List<BookTransactionMgr> ls = new ArrayList<>();
        String sql
                = "SELECT "
                + "    BookTransaction.id, "
                + "    Book.thumbnail, "
                + "    Book.id, "
                + "    Book.title, "
                + "    Distributor.distributor, "
                + "    BookTransaction.quantity, "
                + "    BookTransaction.date, "
                + "    BookTransaction.total,"
                + "    Account.fullName "
                + "FROM "
                + "    BookTransaction " 
                + "JOIN "
                + "    Book ON BookTransaction.bookId = Book.id "
                + "JOIN "
                + "    Distributor ON BookTransaction.distributorId = Distributor.id "
                + "JOIN "
                + "    Account ON BookTransaction.executorId = Account.id "
                + "ORDER BY BookTransaction.date DESC;";
        try {
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                ls.add(new BookTransactionMgr(
                        rs.getInt(1), 
                        rs.getString(2),
                        rs.getInt(3),
                        rs.getNString(4),
                        rs.getNString(5),
                        rs.getInt(6),
                        rs.getTimestamp(7),
                        rs.getInt(8),
                        rs.getString(9)
                ));
            }
        } catch (SQLException ex) {
            Logger.getLogger(BookTransactionMgrDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
        BookTransactionMgr[] arr = new BookTransactionMgr[ls.size()];
        ls.toArray(arr);
        return arr;
    }
}
